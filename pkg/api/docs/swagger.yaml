definitions:
  api.CreateItemMessage:
    properties:
      parent:
        type: string
      path:
        type: string
      public:
        type: string
      public_actions:
        type: string
      signature:
        type: string
    type: object
  api.HTTPIngestItemMessage:
    properties:
      collection:
        type: string
      path:
        type: string
      signature:
        type: string
    type: object
  api.HTTPResultMessage:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
info:
  contact:
    email: juergen.enge@unibas.ch
    name: JÃ¼rgen Enge
    url: https://ub.unibas.ch
  description: Mediaserver API for managing collections and items
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Mediaserver API
  version: "1.0"
paths:
  /collection/{collection}:
    get:
      description: retrieves mediaserver collection information
      operationId: get-collection-by-name
      parameters:
      - description: collection name
        in: path
        name: collection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
      summary: gets collection data
      tags:
      - mediaserver
    put:
      description: creates a new item for indexing
      operationId: put-collection-item
      parameters:
      - description: collection name
        in: path
        name: collection
        required: true
        type: string
      - description: new item to create
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/api.CreateItemMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
      summary: creates new item
      tags:
      - mediaserver
  /ingest:
    get:
      description: gets next item for indexing
      operationId: get-ingest-item
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.HTTPIngestItemMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
      summary: next ingest item
      tags:
      - mediaserver
  /ping:
    get:
      description: for testing if server is running
      operationId: get-ping
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: does pong
      tags:
      - mediaserver
  /storage/{storageid}:
    get:
      description: retrieves mediaserver storage information
      operationId: get-storage-by-id
      parameters:
      - description: storage id
        in: path
        name: storageid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPResultMessage'
      summary: gets storage data
      tags:
      - mediaserver
swagger: "2.0"
